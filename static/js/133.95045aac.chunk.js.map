{"version":3,"file":"static/js/133.95045aac.chunk.js","mappings":"+SAEMA,EAAU,mCAChBC,EAAAA,EAAAA,SAAAA,QAAyB,gCAElB,IAAMC,EAAa,mCAAG,oGACJD,EAAAA,EAAAA,IAAA,qCAAwCD,IADpC,cACrBG,EADqB,yBAEpBA,EAASC,KAAKC,SAFM,2CAAH,qDAIbC,EAAoB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACGD,EADH,4DAC8DO,IAFnD,cAC5BJ,EAD4B,yBAI3BA,EAASC,KAAKC,SAJa,2CAAH,sDAapBG,EAAiB,mCAAG,WAAMC,GAAN,uFACRC,MAAM,sCAAD,OACYD,EADZ,oBAC+BT,EAD/B,oBADG,WACzBG,EADyB,QAIjBQ,GAJiB,sBAKvB,IAAIC,MAAM,2BALa,uBAOlBT,EAASU,OAPS,mFAAH,sDAUjBC,EAAW,mCAAG,WAAML,GAAN,uFACFR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeT,EADf,oBADE,cACnBG,EADmB,yBAIlBA,EAASC,KAAKW,MAJI,2CAAH,sDAOXC,EAAY,mCAAG,WAAMP,GAAN,uFACHR,EAAAA,EAAAA,IAAA,gBACZQ,EADY,4BACeT,EADf,2BADG,cACpBG,EADoB,yBAInBA,EAASC,KAAKC,SAJK,2CAAH,qD,uICtCzB,EAA0B,4BAA1B,EAAkE,8BAAlE,EAA0G,4B,SCoC1G,EAjCmB,SAAC,GAAsB,IAApBY,EAAmB,EAAnBA,aACpB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAWA,OACE,kBAAMC,UAAWC,EAAaC,SANX,SAAAC,GACnBA,EAAMC,iBACNR,EAAaE,EAAMO,cACpB,EAGC,WACE,kBACEL,UAAWC,EACXK,KAAK,OACLC,KAAK,QACLC,WAAS,EACTC,MAAOX,EACPY,SAjBoB,SAAAP,GACxBJ,EAASI,EAAMQ,OAAOF,MACvB,KAiBG,mBAAQT,UAAWC,EAAaK,KAAK,SAArC,SAA8C,aAKnD,E,SCzBYM,EAAS,WACpB,OAAsCf,EAAAA,EAAAA,UAAS,IAA/C,eAAOgB,EAAP,KAAoBC,EAApB,KACA,GAA8BjB,EAAAA,EAAAA,WAAS,GAAvC,eAAOkB,EAAP,KAAgBC,EAAhB,KACA,GAAwCnB,EAAAA,EAAAA,WAAS,GAAjD,eAAOoB,EAAP,KAAqBC,EAArB,KAkBA,OACE,4BACE,SAAC,EAAD,CAAYtB,aAlBK,SAAAuB,GACnBH,GAAW,IAEX/B,EAAAA,EAAAA,IAAqBkC,GAClBC,MAAK,SAAAC,GACJP,EAAeO,GACfH,EAAyC,IAAzBG,EAAcC,OAC/B,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPX,GAAW,EACZ,GACJ,IAKID,IAAW,SAACa,EAAA,EAAD,IACXX,IACC,uBAAG,4DAEJJ,IAAe,SAACgB,EAAA,EAAD,CAAYC,MAAOjB,MAGxC,EAED,G,0FCtCA,EAA6B,+BAA7B,EAAyE,+BAAzE,EAAqH,+B,SCGxGgB,EAAa,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACrBC,GAAWC,EAAAA,EAAAA,MAKjB,OACE,0BACE,eAAIhC,UAAWC,EAAf,SACG6B,EAAMG,KAAI,SAAAC,GAAE,OACX,eAAIlC,UAAWC,EAAf,UACE,gBAAKD,UAAWC,EAAgBkC,QAAS,kBAT/BC,EASiDF,EAAGG,QARtEN,EAAS,WAAD,OAAYK,IADF,IAAAA,CAS+B,EAAzC,SACGF,EAAGI,SAF4BJ,EAAGG,GAD5B,OAoBpB,EAWD,G","sources":["Helpers/ApiData.js","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","Pages/Movies/Movies.jsx","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bdce9be8955c72b9f9c3291acf4f7239';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n// export const fetchMovieDetails = async movieId => {\n//   const response = await axios.get(\n//     `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n//   );\n//   return response.data;\n// };\nexport const fetchMovieDetails = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Movie details not found');\n  }\n  return await response.json();\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"SearchForm_formBox__27dcB\",\"inputForm\":\"SearchForm_inputForm__-sThN\",\"formBtn\":\"SearchForm_formBtn__0vNuW\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './SearchForm.module.css';\n\nconst SearchForm = ({ searchMovies }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    searchMovies(query.toLowerCase());\n  };\n\n  return (\n    <form className={css.formBox} onSubmit={handleSubmit}>\n      <input\n        className={css.inputForm}\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <button className={css.formBtn} type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nSearchForm.propTypes = {\n  searchMovies: PropTypes.func,\n};\n\nexport default SearchForm;\n","import { useState } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport { fetchSearchByKeyword } from 'Helpers/ApiData';\n\nexport const Movies = () => {\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  const searchMovies = queryMovie => {\n    setLoading(true);\n\n    fetchSearchByKeyword(queryMovie)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        setNoMoviesText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <div>\n      <SearchForm searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms && <MoviesList films={searchFilms} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"moviesItem\":\"MoviesList_moviesItem__r+0sq\",\"moviesLink\":\"MoviesList_moviesLink__sYKmc\"};","import { useNavigate } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ films }) => {\n  const navigate = useNavigate();\n  const handleClick = movieid => {\n    navigate(`/movies/${movieid}`);\n  };\n\n  return (\n    <div>\n      <ul className={css.moviesList}>\n        {films.map(el => (\n          <li className={css.moviesItem} key={el.id}>\n            <div className={css.moviesLink} onClick={() => handleClick(el.id)}>\n              {el.title}\n            </div>\n          </li>\n\n          // <li key={el.id} className={css.moviesItem}>\n          //   <Link\n          //     className={css.moviesLink}\n          //     to={`/movies/${el.id}`}\n          //     state={{ from: location }}\n          //   >\n          //     {el.title}\n          //   </Link>\n          // </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nMoviesList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n\nexport default MoviesList;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","movieId","fetch","ok","Error","json","fetchActors","cast","fetchReviews","searchMovies","useState","query","setQuery","className","css","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","Movies","searchFilms","setSearchFilms","loading","setLoading","noMoviesText","setNoMoviesText","queryMovie","then","searchResults","length","catch","error","console","log","finally","Loader","MoviesList","films","navigate","useNavigate","map","el","onClick","movieid","id","title"],"sourceRoot":""}
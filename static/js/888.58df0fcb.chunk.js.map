{"version":3,"file":"static/js/888.58df0fcb.chunk.js","mappings":"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","sources":["Helpers/ApiData.js","webpack://react-homework-template/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'bdce9be8955c72b9f9c3291acf4f7239';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\nexport const fetchSearchByKeyword = async keyword => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\n// export const fetchMovieDetails = async movieId => {\n//   const response = await axios.get(\n//     `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n//   );\n//   return response.data;\n// };\nexport const fetchMovieDetails = async movieId => {\n  const response = await fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  if (!response.ok) {\n    throw new Error('Movie details not found');\n  }\n  return await response.json();\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesBtn\":\"MovieDetails_moviesBtn__9ISp6\",\"detailsImgBox\":\"MovieDetails_detailsImgBox__cXkoB\",\"detailsImg\":\"MovieDetails_detailsImg__Bjrgy\",\"detailsBox\":\"MovieDetails_detailsBox__36xbJ\",\"genresList\":\"MovieDetails_genresList__iljfW\",\"addInfo\":\"MovieDetails_addInfo__xdErv\",\"addInfoTitle\":\"MovieDetails_addInfoTitle__Ob9NR\",\"addInfoList\":\"MovieDetails_addInfoList__ubx6o\",\"addInfoLink\":\"MovieDetails_addInfoLink__Pogws\"};","import { useEffect, useState } from 'react';\nimport { useParams, Link, useLocation, Outlet } from 'react-router-dom';\nimport { fetchMovieDetails } from 'Helpers/ApiData';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nexport const MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieInfo, setMovieInfo] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const location = useLocation();\n\n  useEffect(() => {\n    const fetchMovieDetailsFilms = () => {\n      setLoading(true);\n\n      fetchMovieDetails(movieId)\n        .then(detailMovie => {\n          setMovieInfo(detailMovie);\n        })\n        .catch(error => {\n          console.log(error);\n        })\n        .finally(() => {\n          setLoading(false);\n        });\n    };\n\n    fetchMovieDetailsFilms();\n  }, [movieId]);\n\n  if (!movieInfo) {\n    return;\n  }\n\n  const {\n    title,\n    release_date,\n    popularity,\n    overview,\n    genres,\n    poster_path,\n    original_title,\n  } = movieInfo || {};\n\n  return (\n    <div>\n      {/* <Navigation /> */}\n      <Link to=\"/\" state={{ from: location }}>\n        <button type=\"button\" className={css.moviesBtn}>\n          Go back\n        </button>\n      </Link>\n      {loading && <Loader />}\n      {movieInfo && (\n        <div className={css.detailsImgBox}>\n          <img\n            className={css.detailsImg}\n            width=\"300px\"\n            src={\n              poster_path && `https://image.tmdb.org/t/p/w300/${poster_path}`\n            }\n            alt={original_title}\n          />\n          <div className={css.detailsBox}>\n            <h1>\n              {title} ({release_date.slice(0, 4)})\n            </h1>\n            <p>User score: {popularity}</p>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n            <h2>Genres</h2>\n            <ul className={css.genresList}>\n              {genres.map(genre => (\n                <li key={genre.id}>{genre.name}</li>\n              ))}\n            </ul>\n          </div>\n        </div>\n      )}\n      <hr />\n      <div className={css.addInfo}>\n        <h3 className={css.addInfoTitle}>Additional information</h3>\n        <ul className={css.addInfoList}>\n          <li>\n            <Link className={css.addInfoLink} to=\"cast\">\n              Cast\n            </Link>\n          </li>\n          <li>\n            <Link className={css.addInfoLink} to=\"reviews\">\n              Reviews\n            </Link>\n          </li>\n        </ul>\n        <hr />\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["API_KEY","axios","fetchTrending","response","data","results","fetchSearchByKeyword","keyword","fetchMovieDetails","movieId","fetch","ok","Error","json","fetchActors","cast","fetchReviews","MovieDetails","useParams","useState","movieInfo","setMovieInfo","loading","setLoading","location","useLocation","useEffect","then","detailMovie","catch","error","console","log","finally","title","release_date","popularity","overview","genres","poster_path","original_title","to","state","from","type","className","css","Loader","width","src","alt","slice","map","genre","name","id"],"sourceRoot":""}